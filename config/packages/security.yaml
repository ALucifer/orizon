security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
      encoders:
          App\Entity\User:
            algorithm: bcrypt

      providers:
          in_memory: { memory: ~ }
          login_provider:
              entity:
                  class: App\Entity\User
                  property: email
      firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: login_provider
            logout_on_user_change: true
            logout:
                path:   /logout
                target: /
            form_login:
                      login_path: /login
                      check_path: /login
      role_hierarchy:
              ROLE_UTILISATEUR: ROLE_USER
              ROLE_JOUEUR: ROLE_USER
              ROLE_STRUCTURE: ROLE_USER
              ROLE_GAME_MASTER: ROLE_USER
              ROLE_ADMINISTRATEUR: ROLE_USER
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate


            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
      access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
